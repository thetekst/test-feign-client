import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.13' apply false
    id 'java'
    id 'groovy'
    id 'java-library'
}

ext {
    springCloudVersion = '2020.0.5'
}

subprojects {
    group = 'ru.tkachenko'
    version = this.getVersion()

    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    sourceCompatibility = '11'

    java {
        withSourcesJar()
        withJavadocJar()
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    configurations.all {
        exclude module: 'spring-boot-starter-tomcat'
        exclude group: 'org.eclipse.jetty.websocket'
    }
}

project('module-producer') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation project(':module-common')
    }
}

project('module-consumer') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation project(':module-common')
        implementation 'io.github.openfeign:feign-httpclient'
        implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    }
}
project('module-common') {
    dependencies {
        api('org.springframework.boot:spring-boot-starter-web') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        api 'org.springframework.boot:spring-boot-starter-jetty'
    }
}